<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Even - A super concise theme for Hugo</title>
    <link>http://localhost:1313/post/</link>
    <description>Recent content in Posts on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 05 Sep 2020 23:03:51 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mysql45讲笔记2</title>
      <link>http://localhost:1313/post/mysql2/</link>
      <pubDate>Sat, 05 Sep 2020 23:03:51 +0800</pubDate>
      
      <guid>http://localhost:1313/post/mysql2/</guid>
      <description>如何保证高可用性 切换点怎么缺点 如何判断mysql是否可用 如何恢复误删数据 为什么有kill不掉的语句 临时表在Mysql内的应用</description>
    </item>
    
    <item>
      <title>Mysql45讲笔记1</title>
      <link>http://localhost:1313/post/mysql1/</link>
      <pubDate>Wed, 12 Aug 2020 23:17:04 +0800</pubDate>
      
      <guid>http://localhost:1313/post/mysql1/</guid>
      <description>这里主要列出的是极客时间Mysql45讲的思维脑图的笔记。 Mysql是如何执行的。 Mysql的日志系统 事务隔离，为何你的事务看不见 ~5 索引相关</description>
    </item>
    
    <item>
      <title>Redis</title>
      <link>http://localhost:1313/post/redis/</link>
      <pubDate>Sun, 09 Aug 2020 22:56:44 +0800</pubDate>
      
      <guid>http://localhost:1313/post/redis/</guid>
      <description>Redis源码的笔记 之前看过Redis，最近Redis升6.0改动不小，重新review一下源码，边看边做一些注释，详见 https://github.com/qzqsmile/redis/tree/annotation-601 SDS部分 Redi</description>
    </item>
    
    <item>
      <title>Golang的调度</title>
      <link>http://localhost:1313/post/golang%E7%9A%84%E8%B0%83%E5%BA%A6/</link>
      <pubDate>Wed, 05 Aug 2020 23:02:08 +0800</pubDate>
      
      <guid>http://localhost:1313/post/golang%E7%9A%84%E8%B0%83%E5%BA%A6/</guid>
      <description>Golang协程调度的知识点总结 Golang协程调度器的由来 我们都知道DOS系统是PC的上古系统，其中DOS系统可以认为是个单进程的操作系统</description>
    </item>
    
    <item>
      <title>Net</title>
      <link>http://localhost:1313/post/net/</link>
      <pubDate>Tue, 04 Aug 2020 23:29:54 +0800</pubDate>
      
      <guid>http://localhost:1313/post/net/</guid>
      <description>计算机网络的一些知识点总结 TCP/IP相关 TCP/IP的建立前期是三次握手，后期是四次挥手。其这种机制主要解决了超时和重传的问题。这两个问题</description>
    </item>
    
    <item>
      <title>Microserver</title>
      <link>http://localhost:1313/post/microservice/</link>
      <pubDate>Wed, 29 Jul 2020 22:59:13 +0800</pubDate>
      
      <guid>http://localhost:1313/post/microservice/</guid>
      <description>微服务的架构 以前应用都是比较小的规模，可以单体开发。但是当规模上来以后，不同的人负责不同的模块，这时相互之间的耦合会很复杂，如果仍采用单体应</description>
    </item>
    
    <item>
      <title>K8s笔记</title>
      <link>http://localhost:1313/post/k8s%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 13 Jul 2020 23:39:29 +0800</pubDate>
      
      <guid>http://localhost:1313/post/k8s%E7%AC%94%E8%AE%B0/</guid>
      <description>这里主要记录一下学习K8s的一些简单概念以及操作。想到哪写到哪 Pod Pods是K8s调度的最小单元， 这里经常会有疑问的是，为什么我们需要Pod，</description>
    </item>
    
    <item>
      <title>Zookeeper的一些常用应用场景</title>
      <link>http://localhost:1313/post/zk/</link>
      <pubDate>Tue, 23 Jun 2020 21:38:50 +0800</pubDate>
      
      <guid>http://localhost:1313/post/zk/</guid>
      <description>zookeeper可以简单认为是一个KV系统，它与其它的一些存储组件。比如 Mysql， Redis 集群的区别。个人认为主要集中在以下几个方面 由于Zab</description>
    </item>
    
    <item>
      <title>Go_memory_translate</title>
      <link>http://localhost:1313/post/go_memory_translate/</link>
      <pubDate>Tue, 23 Jun 2020 00:27:11 +0800</pubDate>
      
      <guid>http://localhost:1313/post/go_memory_translate/</guid>
      <description>https://medium.com/a-journey-with-go/go-memory-management-and-allocation-a7396d430f44 Go语言的内存管理是由标准库完成的，？？。 即使开发者不需要与内存管理打交道，go语言的内存管理仍然做了很多优化，并且有一些很有趣的概念。 在</description>
    </item>
    
    <item>
      <title>Flask的hello world的工作流程</title>
      <link>http://localhost:1313/post/1/</link>
      <pubDate>Thu, 05 Dec 2019 16:12:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/1/</guid>
      <description>输入一条URL，Flask会如何解析 利用flask写应用也有一段时间了，这里尝试分析下flask的官网最简单的 hello world 的demo来加深对flas</description>
    </item>
    
  </channel>
</rss>